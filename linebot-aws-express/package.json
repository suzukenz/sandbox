{
    "name": "linebot-aws-express",
    "version": "1.0.0",
    "description": "Example application for running a Line Bot on AWS Serverless",
    "main": "lambda.js",
    "config": {
        "s3BucketName": "YOUR_UNIQUE_BUCKET_NAME",
        "region": "YOUR_AWS_REGION",
        "cloudFormationStackName": "YOUR_SERVERLESS_EXPRESS_LAMBDA_FUNCTION_NAME-stack",
        "functionName": "YOUR_SERVERLESS_EXPRESS_LAMBDA_FUNCTION_NAME",
        "accountId": "YOUR_ACCOUNT_ID",
        "enableScheduled": "YOUR_LAMBDA_FUNCTION_IS_SCHEDULED_OR_NOT",
        "scheduleExpression": "YOUR_LAMBDA_FUNCTION_SCHEDULE_EXPRESSION"
    },
    "scripts": {
        "start": "node app.local.js",
        "config": "node ./scripts/configure.js",
        "deconfig": "node ./scripts/deconfigure.js",
        "local": "node scripts/local",
        "invoke-lambda": "aws lambda invoke --function-name $npm_package_config_functionName --region $npm_package_config_region --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
        "create-bucket": "aws s3 mb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
        "clean-bucket": "aws s3 rm s3://$npm_package_config_s3BucketName --region $npm_package_config_region --recursive",
        "delete-bucket": "aws s3 rb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
        "force-delete-bucket": "npm run clean-bucket && npm run delete-bucket",
        "package": "aws cloudformation package --template ./cloudformation.yaml --s3-bucket $npm_package_config_s3BucketName --output-template packaged-sam.yaml --region $npm_package_config_region",
        "deploy": "aws cloudformation deploy --template-file packaged-sam.yaml --stack-name $npm_package_config_cloudFormationStackName --capabilities CAPABILITY_IAM --region $npm_package_config_region",
        "package-deploy": "npm run package && npm run deploy",
        "delete-stack": "aws cloudformation delete-stack --stack-name $npm_package_config_cloudFormationStackName --region $npm_package_config_region",
        "delete-all": "npm run delete-stack && npm run force-delete-bucket",
        "setup": "npm install && (aws s3api get-bucket-location --bucket $npm_package_config_s3BucketName --region $npm_package_config_region || npm run create-bucket) && npm run package-deploy"
    },
    "license": "Apache-2.0",
    "dependencies": {
        "@line/bot-sdk": "^6.1.0",
        "aws-serverless-express": "^3.2.0",
        "body-parser": "^1.18.3",
        "compression": "^1.6.2",
        "cors": "^2.8.3",
        "express": "^4.16.3"
    },
    "devDependencies": {}
}
